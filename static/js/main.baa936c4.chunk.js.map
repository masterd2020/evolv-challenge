{"version":3,"sources":["context/reducer.js","context/AppContext.js","pages/Admin/Admin.js","pages/User/User.js","pages/Login/Login.js","App.jsx","serviceWorker.js","index.js"],"names":["reducer","state","action","type","editId","payload","editObject","dish","find","el","id","undefined","newState","map","object","lastIndex","length","newObject","setName","setProtein","setFats","setCarbs","setCalories","setEditId","name","protein","fats","carbs","calories","filter","includes","alert","JSON","stringify","fullName","admin","user","isAdmin","AppContext","React","createContext","initialState","AppProvider","children","useReducer","dispatch","useState","editing","setEditing","searchTerm","setSearchTerm","setFullName","setAdmin","Provider","value","useGlobalContext","useContext","CreateDish","className","placeholder","onChange","e","target","onClick","preventDefault","createDish","DisplayDish","key","editDish","deleteDish","Admin","to","Search","filterDish","User","Login","AdminRoute","rest","render","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.baa936c4.chunk.js","sourcesContent":["const reducer = (state, action) => {\n  \n  if(action.type === \"CREATE_DISH\") {\n    const {editId} = action.payload;\n    \n    // For editing\n    const editObject = state.dish.find((el) => el.id === editId);\n    if(editObject !== undefined) {\n      const newState = state.dish.map((el) => {\n        if(el.id === editId) {\n          el = {id: editObject.id, ...action.payload.object}\n        }\n        return el;\n      });\n      \n      return { ...state, dish: [...newState] };\n    };\n    \n    \n    const lastIndex = state.dish[state.dish.length-1];\n    const newObject = {...action.payload.object, id: lastIndex.id + 1};\n    \n    return { ...state, dish: [...state.dish, newObject] };\n  }\n  \n  if(action.type === \"EDIT\") {\n    const {object: {setName, setProtein, setFats, setCarbs, setCalories, setEditId}} = action.payload;\n    const {name, protein, fats, carbs, calories, id} = state.dish.find((el) => el.id === action.payload.id);\n    \n    setName(name);\n    setProtein(protein);\n    setFats(fats);\n    setCarbs(carbs);\n    setCalories(calories);\n    setEditId(id);\n    \n    return state;\n  }\n  \n  if(action.type === \"DELETE\") {\n    const newState = state.dish.filter((el) => el.id !== action.payload);\n    \n    return { ...state, dish: [...newState] };\n  }\n  \n  if(action.type === \"SEARCH\") {\n    const newState = state.dish.filter((el) => {\n      if(el.name.includes(action.payload)) {\n        \n        alert(\"inside\");\n        //alert(el.name.includes(action.payload));\n        alert(JSON.stringify(el));\n        return el;\n      }\n      //if(el.name === action.payload)\n      return;\n    });\n    alert(\"search\")\n    alert(JSON.stringify(newState));\n    return { ...state, dish: [...newState] };\n  }\n  \n  if(action.type === \"LOGIN\") {\n    const {fullName, admin} = action.payload;\n    \n    return {...state, user: {...state.user, isAdmin: admin, fullName}}\n  }\n  \n  if(action.type === \"LOGOUT\") {\n    return {...state, user: {...state.user, isAdmin: false}}\n  }\n  \n  // Default State\n  return state;\n};\n\nexport default reducer;","import React, {useContext, useState, useReducer} from \"react\";\nimport reducer from \"./reducer\";\n\n//import {getWord} from \"../data/url\";\n\nconst AppContext = React.createContext();\n\nconst initialState = {\n  user: {\n    fullName: \"\",\n    isAdmin: false\n  },\n  dish: [\n    {\n      name: \"pizza\",\n      id: 0,\n      protein: \"5%\",\n      carbs: \"34%\",\n      fats: \"3%\",\n      calories: \"1%\"\n    },\n    {\n      name: \"pizza\",\n      id:1,\n      protein: \"5%\",\n      carbs: \"34%\",\n      fats: \"3%\",\n      calories: \"1%\"\n    }\n  ]\n};\n\nconst AppProvider = ({children}) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [editing, setEditing] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [protein, setProtein] = useState(\"\");\n  const [fats, setFats] = useState(\"\");\n  const [carbs, setCarbs] = useState(\"\");\n  const [calories, setCalories] = useState(\"\");\n  const [editId, setEditId] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  const [admin, setAdmin] = useState(false);\n  \n  return(\n    <AppContext.Provider value={{\n      state,\n      dispatch,\n      editing,\n      setEditing,\n      name,\n      setName,\n      protein,\n      setProtein,\n      fats,\n      setFats,\n      carbs,\n      setCarbs,\n      calories,\n      setCalories,\n      editId,\n      setEditId,\n      setSearchTerm,\n      searchTerm,\n      admin,\n      setAdmin,\n      fullName,\n      setFullName\n    }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport {AppContext, AppProvider};","import React from \"react\";\nimport \"./Admin.css\";\nimport {useGlobalContext} from \"../../context/AppContext\";\nimport {Link} from \"react-router-dom\";\n\nconst Admin = () => {\n  const {dispatch} = useGlobalContext();\n  \n  \n  return(\n    <div className=\"admin__container\">\n      <h2><Link to=\"/admin\">Admin Page</Link></h2>\n      <h2><Link to=\"/\">User Page</Link></h2>\n      <button onClick={() => dispatch({type: \"LOGOUT\"})} className=\"logout__button\">Logout</button>\n      <CreateDish />\n      <DisplayDish />\n    </div>\n  )\n}\n\n\nconst CreateDish = () => {\n  const {dispatch, editing, name, setName, protein, setProtein, fats, setFats, carbs, setCarbs, calories, setCalories, setEditing, editId, setEditId} = useGlobalContext();\n  \n  const createDish = (e) => {\n    e.preventDefault();\n    \n    /*if(name.length === 0 && protein.length === 0 && fats.length === 0 && carbs.length === 0 && calories.length === 0) {\n      alert(\"Please provide all the fields\");\n      return;\n    }*/\n    \n    if(name.length === 0) {\n      alert(\"Please provide the name fields\");\n      return;\n    }\n    if(protein.length === 0) {\n      alert(\"Please provide the protein fields\");\n      return;\n    }\n    if(fats.length === 0) {\n      alert(\"Please provide the fats fields\");\n      return;\n    }\n    if(carbs.length === 0) {\n      alert(\"Please provide the carbs fields\");\n      return;\n    }\n    if(calories.length === 0) {\n      alert(\"Please provide the calories fields\");\n      return;\n    }\n    \n    dispatch({type:\"CREATE_DISH\", payload: {object: {name, protein, fats, carbs, calories}, editId, setEditId}})\n    \n    // Clearing the input field for better UX\n    setName(\"\");\n    setProtein(\"\")\n    setFats(\"\")\n    setCalories(\"\")\n    setCarbs(\"\")\n    setEditing(false)\n  }\n  \n  return(\n    <div className=\"create__dish--container\">\n      <h4>Add a dish</h4>\n      <form className=\"create__dish--form\">\n        <div className=\"form__wrapper--container\">\n          <div className=\"form__wrapper\">\n            <label>Name</label><br />\n            <input type=\"text\" placeholder=\"Dish name\" value={name} onChange={(e) => setName(e.target.value)} />\n          </div>\n          <div className=\"form__wrapper\">\n            <label>Protein</label><br />\n            <input type=\"text\" placeholder=\"Protein\" value={protein} onChange={(e) => setProtein(e.target.value)} />\n          </div>\n          <div className=\"form__wrapper\">\n            <label>Carbs</label><br />\n            <input type=\"text\" placeholder=\"Carbs\" value={carbs} onChange={(e) => setCarbs(e.target.value)} />\n          </div>\n          <div className=\"form__wrapper\">\n            <label>Fats</label><br />\n            <input type=\"text\" placeholder=\"Fats\" value={fats} onChange={(e) => setFats(e.target.value)} />\n          </div>\n          <div className=\"form__wrapper\">\n            <label>Calculated Calories</label>\n            <input type=\"text\" placeholder=\"Calculated Calories\" value={calories} onChange={(e) => setCalories(e.target.value)} />\n          </div>\n        </div>\n        <button onClick={(e) => createDish(e)} className=\"create__dish--button\">{editing ? \"Edit Dish\" : \"Create Dish\"}</button>\n      </form>\n    </div>\n  );\n}\n\n\nconst DisplayDish = () => {\n  const {state, dispatch, setEditing, setName, setProtein, setFats, setCarbs, setCalories, setEditId} = useGlobalContext();\n  \n  const editDish = (id) => {\n    setEditing(true)\n    dispatch({type: \"EDIT\", payload: {id, object: {setName, setProtein, setFats, setCarbs, setCalories, setEditId}}})\n  }\n  \n  const deleteDish = (id) => {\n    dispatch({type: \"DELETE\", payload: id})\n  }\n  \n  return(\n    <div className=\"display__table--container\">\n      <h3>All Dishes</h3>\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Protein</th>\n            <th>Carbs</th>\n            <th>Fats</th>\n            <th>Calculated Calories</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            state.dish.map((el) => {\n              const {id, name, protein, carbs, fats, calories} = el;\n              return <tr key={id}>\n            <td>{name}</td>\n            <td>{protein}</td>\n            <td>{carbs}</td>\n            <td>{fats}</td>\n            <td>{calories}</td>\n            <td>\n              <button onClick={() => editDish(id)}>Edit</button> |  \n              <button onClick={() => deleteDish(id)}>Delete</button>\n            </td>\n          </tr>\n            })\n          }\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\n\n\n\n\nexport default Admin;","import React from \"react\";\nimport \"./User.css\";\nimport {useGlobalContext} from \"../../context/AppContext\";\nimport {Link} from \"react-router-dom\";\n\nconst User = () => {\n  \n  return(\n    <div className=\"user__container\">\n      <h2><Link to=\"/\">User Page</Link></h2>\n      <h2><Link to=\"/admin\">Admin Page</Link></h2>\n      <h2><Link to=\"/login\">Login Page</Link></h2>\n      <Search />\n      <DisplayDish />\n    </div>\n  )\n}\n\nconst Search = () => {\n  const {setSearchTerm, searchTerm, dispatch} = useGlobalContext();\n  \n  const filterDish = (e) => {\n    setSearchTerm(e.target.value);\n    dispatch({type: \"SEARCH\", payload: e.target.value});\n  }\n  \n  return (\n    <div className=\"search__container\">\n      <label>Search</label><br />\n      <input type=\"text\" placeholder=\"Search any dish name\" value={searchTerm} onChange={(e) => filterDish(e)} />\n    </div>\n  );\n};\n\nconst DisplayDish = () => {\n  const {state} = useGlobalContext();\n  \n  return(\n    <div className=\"display__table--container\">\n      <h3>All Dishes</h3>\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Protein</th>\n            <th>Carbs</th>\n            <th>Fats</th>\n            <th>Calculated Calories</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            state.dish.map((el) => {\n              const {id, name, protein, carbs, fats, calories} = el;\n              return <tr key={id}>\n            <td>{name}</td>\n            <td>{protein}</td>\n            <td>{carbs}</td>\n            <td>{fats}</td>\n            <td>{calories}</td>\n          </tr>\n            })\n          }\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default User;","import React from \"react\";\nimport \"./Login.css\";\nimport {useGlobalContext} from \"../../context/AppContext\";\nimport {Redirect} from \"react-router-dom\"\n\nconst Login = () => {\n  const {dispatch, state, fullName, setFullName, admin, setAdmin} = useGlobalContext();\n  \n  const login = () => {\n    if(fullName.length === 0) {\n      alert(\"please provide the fullName field\");\n      return;\n    }\n    \n    dispatch({type: \"LOGIN\", payload: {fullName, admin}});\n    \n    // Welcome message\n    alert(`Welcome back ${fullName}, you just logged in as admin`);\n    \n    setFullName(\"\");\n    setAdmin(false);\n    \n  };\n  \n  return (\n    <div className=\"login__container\">\n      {\n        state.user.isAdmin && <Redirect to=\"/admin\" />\n      }\n      <h3>Login</h3>\n      <div className=\"login__wrapper\">\n        <label>Fullname</label><br />\n        <input type=\"text\" placeholder=\"Fullname\" value={fullName} onChange={(e) => setFullName(e.target.value)} />\n      </div>\n      <div className=\"login__checkbox\">\n        <input type=\"checkbox\" value={admin} onClick={() => setAdmin(!admin)}/> login as admin\n      </div>\n      <div className=\"login__button\">\n        <button onClick={() => login()}>Login</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;","import React from \"react\";\nimport \"./App.css\";\nimport {BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\nimport Admin from \"./pages/Admin/Admin\";\nimport User from \"./pages/User/User\";\nimport Login from \"./pages/Login/Login\";\nimport {useGlobalContext} from \"./context/AppContext\";\n\nconst AdminRoute = ({ children, ...rest }) => {\n  const {state} = useGlobalContext();\n\n  return (\n    <Route\n      {...rest}\n      render={() =>\n        state.user.isAdmin ? children : <Redirect to=\"/error\" />\n      }\n    />\n  );\n};\n\nexport default function App() {\n  return <Router>\n    <Switch>\n      <Route exact path=\"/evolv-challenge\" >\n        <User />\n      </Route>\n      <AdminRoute exact path=\"evolv-challenge/admin\" >\n        <Admin />\n      </AdminRoute>\n      <Route exact path=\"evolv-challenge/login\" >\n        <Login />\n      </Route>\n      <Route exact path=\"evolv-challenge/error\" >\n        <h2>404 Not Found</h2>\n      </Route>\n      <Route path=\"*\" >\n        <h2>Error page</h2>\n      </Route>\n    </Switch>\n  </Router>;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {AppProvider} from \"./context/AppContext\";\n\nReactDOM.render(\n    <AppProvider>\n      <App />\n    </AppProvider>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}